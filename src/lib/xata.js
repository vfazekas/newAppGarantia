// Generated by Xata Codegen 0.29.0. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "DB_CONSULTOR",
    columns: [
      {
        name: "data",
        type: "datetime",
        notNull: true,
        defaultValue: "2024-02-06T00:00:00.000Z",
      },
      { name: "os", type: "int", unique: true },
      {
        name: "categoria",
        type: "string",
        notNull: true,
        defaultValue: "null",
      },
      { name: "erro", type: "string", notNull: true, defaultValue: "null" },
      { name: "consultor", type: "link", link: { table: "db_users" } },
      { name: "chat", type: "json", notNull: true, defaultValue: "null" },
      { name: "check", type: "bool" },
    ],
  },
  {
    name: "db_users",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "null" },
      { name: "filial", type: "string", notNull: true, defaultValue: "null" },
    ],
    revLinks: [{ column: "consultor", table: "DB_CONSULTOR" }],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://victor-fazekas-s-workspace-setgkf.us-west-2.xata.sh/db/garantia-db",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
